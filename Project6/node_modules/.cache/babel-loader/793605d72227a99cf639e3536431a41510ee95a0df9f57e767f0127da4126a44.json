{"ast":null,"code":"var _jsxFileName = \"/Users/code-princess/Desktop/React/Project6/src/components/Login/Login.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useReducer } from 'react';\nimport Card from '../UI/Card/Card';\nimport classes from './Login.module.css';\nimport Button from '../UI/Button/Button';\n\n//Reducer Function for email\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst emailReducer = (state, action) => {\n  if (action.type === 'USER_INPUT') {\n    return {\n      value: action.val,\n      isValid: action.val.includes('@')\n    };\n  }\n  if (action.type === 'INPUT_BLUR') {\n    return {\n      value: state.value,\n      isValid: action.val.includes('@')\n    };\n  }\n  return {\n    value: '',\n    isValid: false\n  };\n};\nconst passwordReducer = (state, action) => {\n  if (action.type === 'USER_INFO') {\n    return {\n      value: action.val,\n      is\n    };\n  }\n  return {\n    value: '',\n    isValid: false\n  };\n};\nconst Login = props => {\n  _s();\n  //const [enteredEmail, setEnteredEmail] = useState('');\n  //const [emailIsValid, setEmailIsValid] = useState();\n  const [enteredPassword, setEnteredPassword] = useState('');\n  const [passwordIsValid, setPasswordIsValid] = useState();\n  const [formIsValid, setFormIsValid] = useState(false);\n\n  //UseReducer parameters \n  const [emailCheck, dispatchEmail] = useReducer(emailReducer, {\n    value: '',\n    isValid: null\n  });\n  const [passwordCheck, dispatchPassword] = useReducer(passwordReducer, {\n    value: '',\n    isValid: null\n  });\n  {/*useEffect (()=>{\n    console.log('Running')\n     return () =>{\n      console.log('Clean')\n    }\n   })\n     useEffect(()=>{\n      const identifier = setTimeout(()=>{\n       \n      },500)\n     return () =>{\n      console.log('CLEAN UP')\n      clearTimeout(identifier);\n     } //cleanup function\n    },[enteredEmail, enteredPassword]);*/}\n  const emailChangeHandler = event => {\n    dispatchEmail({\n      type: 'USER_INPUT',\n      val: event.target.value\n    });\n    setFormIsValid(event.target.value.includes('@') && enteredPassword.trim().length > 6);\n  };\n  const passwordChangeHandler = event => {\n    dispatchPassword({\n      type: 'USER_INFO'\n    });\n    //setEnteredPassword(event.target.value);\n\n    setFormIsValid(emailCheck.value.isValid && event.target.value.trim().length > 6);\n  };\n  const validateEmailHandler = () => {\n    dispatchEmail({\n      type: 'INPUT_BLUR'\n    });\n    //setEmailIsValid(emailCheck.isValid);\n  };\n\n  const validatePasswordHandler = () => {\n    setPasswordIsValid(passwordCheck.value.trim().length > 6);\n  };\n  const submitHandler = event => {\n    event.preventDefault();\n    props.onLogin(emailCheck.value, passwordCheck.value);\n  };\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: classes.login,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${classes.control} ${emailCheck.isValid === false ? classes.invalid : ''}`,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"E-Mail\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"email\",\n          value: emailCheck.value,\n          onChange: emailChangeHandler,\n          onBlur: validateEmailHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${classes.control} ${passwordIsValid === false ? classes.invalid : ''}`,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          value: passwordCheck.value,\n          onChange: passwordChangeHandler,\n          onBlur: validatePasswordHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.actions,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          className: classes.btn,\n          disabled: !formIsValid,\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"BG2aHXVHsaqsNDzXt2+iWkd9OiI=\");\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useEffect","useReducer","Card","classes","Button","jsxDEV","_jsxDEV","emailReducer","state","action","type","value","val","isValid","includes","passwordReducer","is","Login","props","_s","enteredPassword","setEnteredPassword","passwordIsValid","setPasswordIsValid","formIsValid","setFormIsValid","emailCheck","dispatchEmail","passwordCheck","dispatchPassword","emailChangeHandler","event","target","trim","length","passwordChangeHandler","validateEmailHandler","validatePasswordHandler","submitHandler","preventDefault","onLogin","className","login","children","onSubmit","control","invalid","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","id","onChange","onBlur","actions","btn","disabled","_c","$RefreshReg$"],"sources":["/Users/code-princess/Desktop/React/Project6/src/components/Login/Login.js"],"sourcesContent":["import React, { useState,useEffect,useReducer } from 'react';\n\nimport Card from '../UI/Card/Card';\nimport classes from './Login.module.css';\nimport Button from '../UI/Button/Button';\n\n//Reducer Function for email\nconst emailReducer = (state,action) =>{\n  if(action.type === 'USER_INPUT'){\n    return {value:action.val, isValid:action.val.includes('@')};\n  }\n  if(action.type === 'INPUT_BLUR'){\n    return {value:state.value, isValid:action.val.includes('@')};\n  }\n  return {value:'', isValid:false};\n};\n\nconst passwordReducer =(state,action) =>{\n  if(action.type === 'USER_INFO'){\n    return {value:action.val, is}\n  }\n  return {\n    value:'',\n    isValid:false\n  }\n}\n\nconst Login = (props) => {\n  //const [enteredEmail, setEnteredEmail] = useState('');\n  //const [emailIsValid, setEmailIsValid] = useState();\n  const [enteredPassword, setEnteredPassword] = useState('');\n  const [passwordIsValid, setPasswordIsValid] = useState();\n  const [formIsValid, setFormIsValid] = useState(false);\n\n  //UseReducer parameters \n   const[emailCheck, dispatchEmail]=useReducer(emailReducer, {\n    value :'', \n    isValid:null\n  });\n\n   const[passwordCheck, dispatchPassword] = useReducer(passwordReducer, {\n    value:'',\n    isValid:null,\n   })\n\n{/*useEffect (()=>{\n  console.log('Running')\n\n  return () =>{\n    console.log('Clean')\n  }\n})\n\n  useEffect(()=>{\n    const identifier = setTimeout(()=>{\n     \n    },500)\n   return () =>{\n    console.log('CLEAN UP')\n    clearTimeout(identifier);\n   } //cleanup function\n  },[enteredEmail, enteredPassword]);*/}\n\n  const emailChangeHandler = (event) => {\n   dispatchEmail({type:'USER_INPUT',val:event.target.value });\n    setFormIsValid(\n      event.target.value.includes('@') && enteredPassword.trim().length > 6\n    );\n\n  };\n\n  const passwordChangeHandler = (event) => {\n    dispatchPassword({type:'USER_INFO'})\n    //setEnteredPassword(event.target.value);\n\n    setFormIsValid(\n      emailCheck.value.isValid && event.target.value.trim().length > 6\n    );\n\n  };\n\n  const validateEmailHandler = () => {\n    dispatchEmail({type:'INPUT_BLUR'})\n    //setEmailIsValid(emailCheck.isValid);\n  };\n\n  const validatePasswordHandler = () => {\n    setPasswordIsValid(passwordCheck.value.trim().length > 6);\n  };\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n    props.onLogin(emailCheck.value, passwordCheck.value);\n  };\n\n  return (\n    <Card className={classes.login}>\n      <form onSubmit={submitHandler}>\n        <div\n          className={`${classes.control} ${\n            emailCheck.isValid === false ? classes.invalid : ''\n          }`}\n        >\n          <label htmlFor=\"email\">E-Mail</label>\n          <input\n            type=\"email\"\n            id=\"email\"\n            value={emailCheck.value}\n            onChange={emailChangeHandler}\n            onBlur={validateEmailHandler}\n          />\n        </div>\n        <div\n          className={`${classes.control} ${\n            passwordIsValid === false ? classes.invalid : ''\n          }`}\n        >\n          <label htmlFor=\"password\">Password</label>\n          <input\n            type=\"password\"\n            id=\"password\"\n            value={passwordCheck.value}\n            onChange={passwordChangeHandler}\n            onBlur={validatePasswordHandler}\n          />\n        </div>\n        <div className={classes.actions}>\n          <Button type=\"submit\" className={classes.btn} disabled={!formIsValid}>\n            Login\n          </Button>\n        </div>\n      </form>\n    </Card>\n  );\n};\n\nexport default Login;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAACC,SAAS,EAACC,UAAU,QAAQ,OAAO;AAE5D,OAAOC,IAAI,MAAM,iBAAiB;AAClC,OAAOC,OAAO,MAAM,oBAAoB;AACxC,OAAOC,MAAM,MAAM,qBAAqB;;AAExC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,YAAY,GAAGA,CAACC,KAAK,EAACC,MAAM,KAAI;EACpC,IAAGA,MAAM,CAACC,IAAI,KAAK,YAAY,EAAC;IAC9B,OAAO;MAACC,KAAK,EAACF,MAAM,CAACG,GAAG;MAAEC,OAAO,EAACJ,MAAM,CAACG,GAAG,CAACE,QAAQ,CAAC,GAAG;IAAC,CAAC;EAC7D;EACA,IAAGL,MAAM,CAACC,IAAI,KAAK,YAAY,EAAC;IAC9B,OAAO;MAACC,KAAK,EAACH,KAAK,CAACG,KAAK;MAAEE,OAAO,EAACJ,MAAM,CAACG,GAAG,CAACE,QAAQ,CAAC,GAAG;IAAC,CAAC;EAC9D;EACA,OAAO;IAACH,KAAK,EAAC,EAAE;IAAEE,OAAO,EAAC;EAAK,CAAC;AAClC,CAAC;AAED,MAAME,eAAe,GAAEA,CAACP,KAAK,EAACC,MAAM,KAAI;EACtC,IAAGA,MAAM,CAACC,IAAI,KAAK,WAAW,EAAC;IAC7B,OAAO;MAACC,KAAK,EAACF,MAAM,CAACG,GAAG;MAAEI;IAAE,CAAC;EAC/B;EACA,OAAO;IACLL,KAAK,EAAC,EAAE;IACRE,OAAO,EAAC;EACV,CAAC;AACH,CAAC;AAED,MAAMI,KAAK,GAAIC,KAAK,IAAK;EAAAC,EAAA;EACvB;EACA;EACA,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGtB,QAAQ,CAAC,EAAE,CAAC;EAC1D,MAAM,CAACuB,eAAe,EAAEC,kBAAkB,CAAC,GAAGxB,QAAQ,CAAC,CAAC;EACxD,MAAM,CAACyB,WAAW,EAAEC,cAAc,CAAC,GAAG1B,QAAQ,CAAC,KAAK,CAAC;;EAErD;EACC,MAAK,CAAC2B,UAAU,EAAEC,aAAa,CAAC,GAAC1B,UAAU,CAACM,YAAY,EAAE;IACzDI,KAAK,EAAE,EAAE;IACTE,OAAO,EAAC;EACV,CAAC,CAAC;EAED,MAAK,CAACe,aAAa,EAAEC,gBAAgB,CAAC,GAAG5B,UAAU,CAACc,eAAe,EAAE;IACpEJ,KAAK,EAAC,EAAE;IACRE,OAAO,EAAC;EACT,CAAC,CAAC;EAEL,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAdC;EAkBC,MAAMiB,kBAAkB,GAAIC,KAAK,IAAK;IACrCJ,aAAa,CAAC;MAACjB,IAAI,EAAC,YAAY;MAACE,GAAG,EAACmB,KAAK,CAACC,MAAM,CAACrB;IAAM,CAAC,CAAC;IACzDc,cAAc,CACZM,KAAK,CAACC,MAAM,CAACrB,KAAK,CAACG,QAAQ,CAAC,GAAG,CAAC,IAAIM,eAAe,CAACa,IAAI,CAAC,CAAC,CAACC,MAAM,GAAG,CACtE,CAAC;EAEH,CAAC;EAED,MAAMC,qBAAqB,GAAIJ,KAAK,IAAK;IACvCF,gBAAgB,CAAC;MAACnB,IAAI,EAAC;IAAW,CAAC,CAAC;IACpC;;IAEAe,cAAc,CACZC,UAAU,CAACf,KAAK,CAACE,OAAO,IAAIkB,KAAK,CAACC,MAAM,CAACrB,KAAK,CAACsB,IAAI,CAAC,CAAC,CAACC,MAAM,GAAG,CACjE,CAAC;EAEH,CAAC;EAED,MAAME,oBAAoB,GAAGA,CAAA,KAAM;IACjCT,aAAa,CAAC;MAACjB,IAAI,EAAC;IAAY,CAAC,CAAC;IAClC;EACF,CAAC;;EAED,MAAM2B,uBAAuB,GAAGA,CAAA,KAAM;IACpCd,kBAAkB,CAACK,aAAa,CAACjB,KAAK,CAACsB,IAAI,CAAC,CAAC,CAACC,MAAM,GAAG,CAAC,CAAC;EAC3D,CAAC;EAED,MAAMI,aAAa,GAAIP,KAAK,IAAK;IAC/BA,KAAK,CAACQ,cAAc,CAAC,CAAC;IACtBrB,KAAK,CAACsB,OAAO,CAACd,UAAU,CAACf,KAAK,EAAEiB,aAAa,CAACjB,KAAK,CAAC;EACtD,CAAC;EAED,oBACEL,OAAA,CAACJ,IAAI;IAACuC,SAAS,EAAEtC,OAAO,CAACuC,KAAM;IAAAC,QAAA,eAC7BrC,OAAA;MAAMsC,QAAQ,EAAEN,aAAc;MAAAK,QAAA,gBAC5BrC,OAAA;QACEmC,SAAS,EAAG,GAAEtC,OAAO,CAAC0C,OAAQ,IAC5BnB,UAAU,CAACb,OAAO,KAAK,KAAK,GAAGV,OAAO,CAAC2C,OAAO,GAAG,EAClD,EAAE;QAAAH,QAAA,gBAEHrC,OAAA;UAAOyC,OAAO,EAAC,OAAO;UAAAJ,QAAA,EAAC;QAAM;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACrC7C,OAAA;UACEI,IAAI,EAAC,OAAO;UACZ0C,EAAE,EAAC,OAAO;UACVzC,KAAK,EAAEe,UAAU,CAACf,KAAM;UACxB0C,QAAQ,EAAEvB,kBAAmB;UAC7BwB,MAAM,EAAElB;QAAqB;UAAAY,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC9B,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eACN7C,OAAA;QACEmC,SAAS,EAAG,GAAEtC,OAAO,CAAC0C,OAAQ,IAC5BvB,eAAe,KAAK,KAAK,GAAGnB,OAAO,CAAC2C,OAAO,GAAG,EAC/C,EAAE;QAAAH,QAAA,gBAEHrC,OAAA;UAAOyC,OAAO,EAAC,UAAU;UAAAJ,QAAA,EAAC;QAAQ;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eAC1C7C,OAAA;UACEI,IAAI,EAAC,UAAU;UACf0C,EAAE,EAAC,UAAU;UACbzC,KAAK,EAAEiB,aAAa,CAACjB,KAAM;UAC3B0C,QAAQ,EAAElB,qBAAsB;UAChCmB,MAAM,EAAEjB;QAAwB;UAAAW,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACjC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eACN7C,OAAA;QAAKmC,SAAS,EAAEtC,OAAO,CAACoD,OAAQ;QAAAZ,QAAA,eAC9BrC,OAAA,CAACF,MAAM;UAACM,IAAI,EAAC,QAAQ;UAAC+B,SAAS,EAAEtC,OAAO,CAACqD,GAAI;UAACC,QAAQ,EAAE,CAACjC,WAAY;UAAAmB,QAAA,EAAC;QAEtE;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEX,CAAC;AAAChC,EAAA,CA3GIF,KAAK;AAAAyC,EAAA,GAALzC,KAAK;AA6GX,eAAeA,KAAK;AAAC,IAAAyC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}