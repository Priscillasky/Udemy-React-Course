{"ast":null,"code":"var _jsxFileName = \"/Users/code-princess/Desktop/React/Project1/src/Components/Expenses/Expenses.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport ExpenseItem from './ExpenseItem';\nimport Card from '../UI/Card';\nimport './Expenses.css';\nimport ExpensesFilter from './ExpensesFilter';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Expenses = props => {\n  _s();\n  const [filteredYear, setFilteredYear] = useState('2020');\n  let filterInfoText = '2019,2021 & 2022';\n  if (filteredYear === '2019') {\n    filterInfoText = '2020, 2021 & 2022';\n  } else if (filteredYear === '2020') {\n    filterInfoText = '2019, 2021 & 2022';\n  } else {\n    filterInfoText = '2019, 2020 & 2021';\n  }\n  const filterchangeHandler = selectedYear => {\n    setFilteredYear(selectedYear);\n    console.log('Expenses.js');\n  };\n  const filteredExpenses = props.items.filter(expense => {\n    return expense.date.getFullYear().toString() === filteredYear;\n  });\n  let expensesContent = /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"No Expenses Found \"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 27\n  }, this);\n  if (filteredExpenses.length > 0) {\n    expensesContent = filteredExpenses.map(expense => /*#__PURE__*/_jsxDEV(ExpenseItem, {\n      title: expense.title,\n      amount: expense.amount,\n      date: expense.date\n    }, expense.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this));\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      className: \"expenses\",\n      children: [/*#__PURE__*/_jsxDEV(ExpensesFilter, {\n        selected: filteredYear,\n        onChangeFilter: filterchangeHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 5\n      }, this), filteredExpenses, \".length === 0 && \", /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No expenses found\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 41\n      }, this), filteredExpenses.length > 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No expenses found\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this) : filteredExpenses.map(expense => /*#__PURE__*/_jsxDEV(ExpenseItem, {\n        title: expense.title,\n        amount: expense.amount,\n        date: expense.date\n      }, expense.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 4\n  }, this);\n};\n_s(Expenses, \"hfHn3JcUIT/DZCGPYC0K8sjvZ+s=\");\n_c = Expenses;\nexport default Expenses;\nvar _c;\n$RefreshReg$(_c, \"Expenses\");","map":{"version":3,"names":["React","useState","ExpenseItem","Card","ExpensesFilter","jsxDEV","_jsxDEV","Expenses","props","_s","filteredYear","setFilteredYear","filterInfoText","filterchangeHandler","selectedYear","console","log","filteredExpenses","items","filter","expense","date","getFullYear","toString","expensesContent","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","title","amount","id","className","selected","onChangeFilter","_c","$RefreshReg$"],"sources":["/Users/code-princess/Desktop/React/Project1/src/Components/Expenses/Expenses.jsx"],"sourcesContent":["import React, {useState} from 'react';\nimport ExpenseItem from './ExpenseItem';\nimport Card from '../UI/Card';\nimport './Expenses.css';\nimport ExpensesFilter from './ExpensesFilter';\nconst Expenses = (props) =>{\n    const [filteredYear,setFilteredYear] = useState('2020');\n    \n    let filterInfoText = '2019,2021 & 2022';\n    \n        if (filteredYear === '2019'){\n            filterInfoText = '2020, 2021 & 2022';\n        }else if (filteredYear=== '2020'){\n            filterInfoText = '2019, 2021 & 2022';\n        }else {\n            filterInfoText = '2019, 2020 & 2021';\n        }\n\n    const filterchangeHandler = selectedYear =>{\n        setFilteredYear(selectedYear);\n        console.log('Expenses.js')\n        \n    }\n\n    const filteredExpenses = props.items.filter(expense =>{\n        return expense.date.getFullYear().toString() === filteredYear;\n    });\n\n    let expensesContent = <p>No Expenses Found </p>\n    if(filteredExpenses.length > 0) {\n        expensesContent = filteredExpenses.map((expense) => (\n            <ExpenseItem \n                key={expense.id}\n                title= {expense.title}\n                amount ={expense.amount} \n                date = {expense.date}\n                />\n                ));\n    }\nreturn (\n   <div>\n    <Card className='expenses'>\n    <ExpensesFilter \n     selected = {filteredYear} \n     onChangeFilter = {filterchangeHandler} \n     />\n     {filteredExpenses}.length === 0 && <p>No expenses found</p>\n     {filteredExpenses.length > 0 ? (\n        <p>No expenses found</p>\n        ):( \n    filteredExpenses.map((expense) => (\n        <ExpenseItem \n            key={expense.id}\n            title= {expense.title}\n            amount ={expense.amount} \n            date = {expense.date}\n            />\n            ))\n)}\n    \n    </Card>\n    </div>\n)\n}\nexport default Expenses;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}