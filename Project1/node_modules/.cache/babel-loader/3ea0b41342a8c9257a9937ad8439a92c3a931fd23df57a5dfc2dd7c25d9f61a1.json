{"ast":null,"code":"var _jsxFileName = \"/Users/code-princess/Desktop/React/Project1/src/Components/Expenses/ExpenseChart.js\";\nimport React from 'react';\nimport Chart from '../Chart/Chart';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ExpensesChart = () => {\n  const chartDataPoints = [{\n    label: 'Jan',\n    value: 0\n  }, {\n    label: 'Feb',\n    value: 0\n  }, {\n    label: 'Mar',\n    value: 0\n  }, {\n    label: 'Apr',\n    value: 0\n  }, {\n    label: 'May',\n    value: 0\n  }, {\n    label: 'Jun',\n    value: 0\n  }, {\n    label: 'Jul',\n    value: 0\n  }, {\n    label: 'Aug',\n    value: 0\n  }, {\n    label: 'Sep',\n    value: 0\n  }, {\n    label: 'Oct',\n    value: 0\n  }, {\n    label: 'Nov',\n    value: 0\n  }, {\n    label: 'Dec',\n    value: 0\n  }];\n  for (const expense of props.expenses) {\n    const expenseMonth = expense.date.getMonth();\n    chartDataPoints[expenseMonth].value += expense.amount;\n  }\n  return /*#__PURE__*/_jsxDEV(Chart, {\n    datapoints: chartDataPoints\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 12\n  }, this);\n};\n_c = ExpensesChart;\nexport default ExpensesChart;\nvar _c;\n$RefreshReg$(_c, \"ExpensesChart\");","map":{"version":3,"names":["React","Chart","jsxDEV","_jsxDEV","ExpensesChart","chartDataPoints","label","value","expense","props","expenses","expenseMonth","date","getMonth","amount","datapoints","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/code-princess/Desktop/React/Project1/src/Components/Expenses/ExpenseChart.js"],"sourcesContent":["import React from 'react'\nimport Chart from '../Chart/Chart';\n\nconst ExpensesChart = () =>{\n    const chartDataPoints = [\n        {label:'Jan' ,value:0},\n        {label:'Feb' ,value:0},\n        {label:'Mar' ,value:0},\n        {label:'Apr' ,value:0},\n        {label:'May' ,value:0},\n        {label:'Jun' ,value:0},\n        {label:'Jul' ,value:0},\n        {label:'Aug' ,value:0},\n        {label:'Sep' ,value:0},\n        {label:'Oct' ,value:0},\n        {label:'Nov' ,value:0},\n        {label:'Dec' ,value:0}\n    ];\n    for (const expense of props.expenses){\n        const expenseMonth = expense.date.getMonth();\n        chartDataPoints[expenseMonth].value += expense.amount;\n    }\n    return <Chart  datapoints = {chartDataPoints}/>\n}\nexport default ExpensesChart"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,MAAM,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnC,MAAMC,aAAa,GAAGA,CAAA,KAAK;EACvB,MAAMC,eAAe,GAAG,CACpB;IAACC,KAAK,EAAC,KAAK;IAAEC,KAAK,EAAC;EAAC,CAAC,EACtB;IAACD,KAAK,EAAC,KAAK;IAAEC,KAAK,EAAC;EAAC,CAAC,EACtB;IAACD,KAAK,EAAC,KAAK;IAAEC,KAAK,EAAC;EAAC,CAAC,EACtB;IAACD,KAAK,EAAC,KAAK;IAAEC,KAAK,EAAC;EAAC,CAAC,EACtB;IAACD,KAAK,EAAC,KAAK;IAAEC,KAAK,EAAC;EAAC,CAAC,EACtB;IAACD,KAAK,EAAC,KAAK;IAAEC,KAAK,EAAC;EAAC,CAAC,EACtB;IAACD,KAAK,EAAC,KAAK;IAAEC,KAAK,EAAC;EAAC,CAAC,EACtB;IAACD,KAAK,EAAC,KAAK;IAAEC,KAAK,EAAC;EAAC,CAAC,EACtB;IAACD,KAAK,EAAC,KAAK;IAAEC,KAAK,EAAC;EAAC,CAAC,EACtB;IAACD,KAAK,EAAC,KAAK;IAAEC,KAAK,EAAC;EAAC,CAAC,EACtB;IAACD,KAAK,EAAC,KAAK;IAAEC,KAAK,EAAC;EAAC,CAAC,EACtB;IAACD,KAAK,EAAC,KAAK;IAAEC,KAAK,EAAC;EAAC,CAAC,CACzB;EACD,KAAK,MAAMC,OAAO,IAAIC,KAAK,CAACC,QAAQ,EAAC;IACjC,MAAMC,YAAY,GAAGH,OAAO,CAACI,IAAI,CAACC,QAAQ,CAAC,CAAC;IAC5CR,eAAe,CAACM,YAAY,CAAC,CAACJ,KAAK,IAAIC,OAAO,CAACM,MAAM;EACzD;EACA,oBAAOX,OAAA,CAACF,KAAK;IAAEc,UAAU,EAAIV;EAAgB;IAAAW,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAC,CAAC;AACnD,CAAC;AAAAC,EAAA,GApBKhB,aAAa;AAqBnB,eAAeA,aAAa;AAAA,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}